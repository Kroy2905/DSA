BST is a special binary tree which has additional properties : 
- left subtree the value of a node is less than the parent tree 
- right subtree the value of a node is greater than the parent tree 
                                            70                     <---- level 1 
                                    /                  \ 
                                50                     90          <---- level 2
                            /        \                  /\
                         30           60              80  100       <---- level 3
                         /\
                       20  40                                      <---- level 4 

Why needed ? - BST is an implicit data structure which means the relationship and struture between the elements are not defined 
by the programmer.It relies on the implicit behaviour to track where the node  is. This makes insertion and deletion much easier by
traversing only hafl of the tree . So traversing takes only half
of the entire tree gives a complexity of O(log n ). 

Insertion in BST = insertion always takes place at the leaf node depending on the st property.
Deletion in BST = Deletion can occur in 3 scenarios - 
Case 1 - The node to be deleted in a leaf node 
Case 2 - The node has 1 child 
Case 3 - The node has 2 children 
